<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown语法实例</title>
      <link href="/2024/06/30/Markdown/"/>
      <url>/2024/06/30/Markdown/</url>
      
        <content type="html"><![CDATA[<h3 id="基本操作篇">基本操作篇</h3><h6 id="最小可以到六级标题">最小可以到六级标题</h6><p>有序列表：</p><ol><li>有序列表1</li><li>有序列表2</li></ol><p>无序列表：</p><ul><li>无序列表1</li></ul><ul><li>无序列表2</li></ul><p>清单：</p><ul><li>[ ] 吃饭</li><li>[x] 睡觉</li></ul><p>字体：<br><em>斜体</em>，<strong>粗体</strong>，<em><strong>粗斜体</strong></em>，<code>printf</code>,<u>下划线<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></u>,H<sub>2</sub>O,x<sup>2</sup>,==高亮文字==，<s>删除线</s>,<br>😀表情代码大全在下面</p><h3 id="进阶操作篇">进阶操作篇</h3><ul><li><p>一、插入超链接：</p><ol><li><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown语法</a></li><li>或者直接输入URL：<a href="https://blog.csdn.net/qq_39087432/article/details/115407374">https://blog.csdn.net/qq_39087432/article/details/115407374</a> （表情包代码链接）</li><li>跳转到<a href="#markdown%E8%AF%AD%E6%B3%95%E5%AE%9E%E4%BE%8B">Markdown语法实例</a></li><li>挂嵌入视频的方法：b站分享-&gt;嵌入代码-&gt;粘贴但记得加https</li></ol>  <iframe src="https://player.bilibili.com/player.html?aid=327623069&bvid=BV1JA411h7Gw&cid=171385214&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></li><li><p>二、插入图片<br><img src="https://c-ssl.dtstatic.com/uploads/blog/202301/03/20230103123454_10000.thumb.400_0.jpg" alt="邓紫棋" title="邓紫棋姐姐"></p></li></ul><p>[]里的是当图片无法加载时显示的文字，用于描述图片的内容；()可以是图片的网络 URL 地址，也可以是本地图片的相对或绝对路径。</p><ul><li>三、插入引用</li></ul><blockquote><p>这是一句引用</p></blockquote><ul><li>四、插入代码块</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> (<span class="string">&quot;这是一个代码块&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>五、插入下划线</li></ul><hr><ul><li>六、插入脚注<br>在vscode上写代码<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></li></ul><ul><li>七、插入表格</li></ul><table><thead><tr><th>a</th><th>b</th><th>c</th><th>d</th></tr></thead><tbody><tr><td>f</td><td>g</td><td>h</td><td>i</td></tr><tr><td>e</td><td>j</td><td>k</td><td>l</td></tr></tbody></table><ul><li>八、插入公式（语法同Latex）<br>$$\lim_{x\to0}\frac{\sin x}{x}=1$$<br>直接在这个网站上编辑公式把代码copy过来就行：<a href="https://latex.91maths.com/">https://latex.91maths.com/</a></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>冷知识：Markdown可以兼容HTML语言 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>指的是Visual Studio Code <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/2024/06/28/Hexo/"/>
      <url>/2024/06/28/Hexo/</url>
      
        <content type="html"><![CDATA[<h1>创建网站</h1><h3 id="一、准备">一、准备</h3><ul><li>下载nodejs：<a href="https://npmmirror.com/mirrors/node/">https://npmmirror.com/mirrors/node/</a></li><li>下载git：<a href="https://git-scm.com/download">https://git-scm.com/download</a></li><li>在命令行中输入</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">-g</span> hexo<span class="literal">-cli</span></span><br></pre></td></tr></table></figure><h3 id="二、创建github仓库">二、创建github仓库</h3><ul><li>仓库名以.github.io结尾</li><li>仓库权限要设置为public</li><li>仓库名要和你的github用户名一样（受不了了为什么网上一些教程里这些东西提都没提 😭😭😭）</li></ul><h3 id="三、生成SSL-Keys">三、生成SSL Keys</h3><ol><li>在桌面git bash here，输入以下代码后enter四次</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh<span class="literal">-keygen</span> <span class="literal">-t</span> rsa <span class="literal">-C</span> <span class="string">&quot;邮件地址&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>进入C:\Users\用户名，在里面进入.ssh文件，随便用一个编辑器打开，全选复制其中内容</p></li><li><p>打开github，进入用户设置，找到SSH keys，新建SSH keys，名称随意，在下面粘贴刚才复制的代码，然后创建</p></li><li><p>git bash here后输入以下代码看是否成功：</p></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh <span class="literal">-T</span> git@github.com</span><br></pre></td></tr></table></figure><p>回车后如果还有要输入的就输yes</p><h3 id="四、创建文件">四、创建文件</h3><ol><li>随便找一个地方创建一个文件夹放blog文件的，在这个文件夹里git bash here</li><li>输入</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p><strong>如果没成功就在前面加上npx,e.g.npx hexo init,下面同理</strong></p><ol start="3"><li>依次输入这三行命令</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo install</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>理论上可以出现<br><img src="picture1.png" alt="运行结果"><br>然后选择这个网址右键后open即可，不要ctrl+C去复制否则就退出了</p><h3 id="五、上线博客">五、上线博客</h3><ol><li>进入之前的Blog文件夹，用记事本打开_config.yml，拉到最下面将deploy后面的全删掉，复制粘贴这段</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: git</span><br><span class="line">repository: </span><br><span class="line">branch: main</span><br></pre></td></tr></table></figure><p><strong>注意缩进格式：每行前面都有两个空格不要删，每个冒号后面都有个空格也不要删！</strong><br>2. 去github之前生成的仓库页面，点code，复制https链接，将其粘贴到我们记事本中的repository：后面，然后保存退出<br>3. 回到博客文件夹，git bash here，安装自动部署发布工具(否则会报错&quot;Deployer not found: git&quot;)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>再依次</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g（生成）</span><br><span class="line">hexo d（上传）</span><br></pre></td></tr></table></figure><p>然后网站就部署成功了，网址就是：<a href="http://xn--eqr924avxo.github.io">用户名.github.io</a></p><h1>基础操作</h1><h3 id="一、更改网站资料">一、更改网站资料</h3><p>用记事本打开我们blog文件夹中的_config.yml文件，将#Site下面按自己的需求填上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">## Site</span><br><span class="line">title: 标题</span><br><span class="line">subtitle: 副标题</span><br><span class="line">description: 描述</span><br><span class="line">keywords: 关键词</span><br><span class="line">author: 站主</span><br><span class="line">language: 语言（可以填写zh-CN）</span><br><span class="line">timezone: 时区（可以填写Asia/Shanghai）</span><br></pre></td></tr></table></figure><h3 id="二、上传文章">二、上传文章</h3><p>在Blog文件夹中打开git bash,输入下方代码就可以生成新的文章md文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 文章标题</span><br></pre></td></tr></table></figure><p>文章是.md格式，在我们的Blog文件夹中的source/_posts中<br>写好以后，我们还是一样打开git bash生成、上传</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><strong>注意：以后再更新网站文件要连续输入：</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br></pre></td></tr></table></figure><p><img src="hexo%20cl.png" alt="运行结果"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="hexo%20g.png" alt="运行结果"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><img src="hexo%20d.png" alt="运行结果"></p><h3 id="三、文章中添加图片">三、文章中添加图片</h3><ol><li>下载插件：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><ol start="2"><li>修改站点配置文件_config.yml<br>把站点配置文件_config.yml中的post_asset_folder选项设为true，这样以后每次执行<code>hexo new aaaa</code>新增文章命令时，都会在<code>_posts</code>目录下生成<code>aaaa.md</code>文章和<code>aaaa</code>文件夹，md文章中引用图片使用相对路径格式，如下：</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">logo</span>](<span class="link">aaaa/logo.png</span>)</span><br></pre></td></tr></table></figure><p>这样在vscode编辑模式下既可以正常预览本地图片，同时，在执行完<code>hexo g;hexo s</code>命令运行服务后，网页端也能正常显示本地图片。</p><p>注意，今后如果修改了<code>aaaa.md</code>文件名，记得要同步修改同名文件夹。</p><ol start="3"><li>修改hexo-asset-image插件的bug<br>如果本地图片还不能正常先试试，说明<code>hexo-asset-image</code>插件的bug仍未修复，需要修改站点目录下<code>node_modules\hexo-asset-image\index.js</code>文件，找到if(/.*/index.html$/.test(link)) { 字段，大概在17行左右，添加对应的else if字段，如下：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="regexp">/.*\/index\.html$/</span>.<span class="title function_">test</span>(link)) &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (link.<span class="title function_">charAt</span>(link.<span class="property">length</span> - <span class="number">1</span>) === <span class="string">&#x27;/&#x27;</span>) &#123;</span><br><span class="line">  <span class="comment">// link 是文件夹路径情形时</span></span><br><span class="line">  <span class="keyword">var</span> endPos = link.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到找到$(‘img’).each(function()){代码段，将其中的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, config.<span class="property">root</span> + link + src);</span><br><span class="line"><span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.<span class="property">root</span> + link + src);</span><br></pre></td></tr></table></figure><p>改为相对路径引用：（此步可以不改，即generate后的站点采用的是绝对路径引用图片）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, src);</span><br><span class="line"><span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;update link as:--&gt;&quot;</span> + src);</span><br></pre></td></tr></table></figure><p>原文链接：<a href="https://blog.csdn.net/kantaiyang/article/details/129159055">https://blog.csdn.net/kantaiyang/article/details/129159055</a></p><h3 id="四、切换主题">四、切换主题</h3><p>以butterfly为例</p><ol><li>在git bash 中输入：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo<span class="literal">-theme-butterfly</span></span><br></pre></td></tr></table></figure><p>安装成功后可在node_modules文件夹下找到hexo-theme-butterfly文件夹<br>2. 下载安装pug以及stylus的渲染器，这两个渲染器是Butterfly生成基础页面所需的依赖包</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-renderer-pug</span> hexo<span class="literal">-renderer-stylus</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure><p>在config.yml文件中找到theme项，改为butterfly，然后上传即可<br>其他主题也可以在hexo官方文档中的主题文档中找各自文件的教程</p><p><em>同时为了减少升级主题后带来的不便，请使用以下方法（建议，可以不做，高度魔改的一般都不会升级主题了，不然魔改的会被覆盖掉）<br>把主题文件夹中的 <code>_config.yml</code> 复制到 <code>Hexo</code> 根目录里（我这里路径为【C:/Hexo-Blog/blog-demo】），同时重新命名为 <code>_config.butterfly.yml</code>。以后只需要在 <code>_config.butterfly.yml</code>进行配置即可生效。Hexo会自动合併主题中的<code>_config.yml</code>和 <code>_config.butterfly.yml</code>里的配置，如果存在同名配置，会使用<code>_config.butterfly.yml</code>的配置，其优先度较高。</em></p><h1>进阶操作</h1><h3 id="一、Front-matter">一、Front-matter</h3><p>Front-matter 是 markdown 文件最上方以—分隔的区域，用于指定个别档案的变数。</p><ul><li>Page Front-matter 用于页面配置</li><li>Post Front-matter 用于文章页配置<br><strong>如果标注可选的参数，可根据自己需要添加，不用全部都写</strong></li></ul><p>==<em>Page Front-matter</em>：==</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">--- </span></span><br><span class="line"><span class="attr">title:</span></span><br><span class="line"><span class="attr">date:</span></span><br><span class="line"><span class="attr">updated:</span></span><br><span class="line"><span class="attr">type:</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">top_img:</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line"><span class="attr">katex:</span></span><br><span class="line"><span class="attr">aside:</span></span><br><span class="line"><span class="attr">aplayer:</span></span><br><span class="line"><span class="attr">highlight_shrink:</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标籤、分类和友情链接三个页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块(默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>kates</td><td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr></tbody></table><p>==<em>Post Front-matter:</em>==</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span></span><br><span class="line"><span class="attr">date:</span></span><br><span class="line"><span class="attr">updated:</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">top_img:</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line"><span class="attr">cover:</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line"><span class="attr">toc_number:</span></span><br><span class="line"><span class="attr">toc_style_simple:</span></span><br><span class="line"><span class="attr">copyright:</span></span><br><span class="line"><span class="attr">copyright_author:</span></span><br><span class="line"><span class="attr">copyright_author_href:</span></span><br><span class="line"><span class="attr">copyright_url:</span></span><br><span class="line"><span class="attr">copyright_info:</span></span><br><span class="line"><span class="attr">mathjax:</span></span><br><span class="line"><span class="attr">katex:</span></span><br><span class="line"><span class="attr">aplayer:</span></span><br><span class="line"><span class="attr">highlight_shrink:</span></span><br><span class="line"><span class="attr">aside:</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】文章标题</td></tr><tr><td>date</td><td>【必需】文章创建日期</td></tr><tr><td>updated</td><td>【可选】文章更新日期</td></tr><tr><td>tags</td><td>【可选】文章标籤</td></tr><tr><td>categories</td><td>【可选】文章分类</td></tr><tr><td>keywords</td><td>【可选】文章关键字</td></tr><tr><td>description</td><td>【可选】文章描述</td></tr><tr><td>top_img</td><td>【可选】文章顶部图片</td></tr><tr><td>cover</td><td>【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</td></tr><tr><td>comments</td><td>【可选】显示文章评论模块(默认 true)</td></tr><tr><td>toc</td><td>【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td>toc_number</td><td>【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td>toc_style_simple</td><td>【可选】显示 toc 简洁模式</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的文章作者</td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的文章作者链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的文章连结链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的版权声明文字</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr></tbody></table><h3 id="二、标签页">二、标签页</h3><ol><li>前往你的 Hexo 博客的根目录</li><li>输入 <code>hexo new page tags</code></li><li>你会找到 source/tags/index.md 这个文件</li><li>修改这个文件：</li></ol><p>记得添加 type: “tags”</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标签</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-01-05 00:00:00</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="attr">orderby:</span> <span class="string">random</span></span><br><span class="line"><span class="attr">order:</span> <span class="number">1</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>orderby：name/random/length,注明排序顺序的<br>order： 1, asc for ascending; -1, desc for descending</p><h3 id="三、分类页">三、分类页</h3><ol><li>前往你的 Hexo 博客的根目录</li><li>输入 <code>hexo new page categories</code></li><li>你会找到 source/categories/index.md这个文件</li><li>修改这个文件：<br>前往你的 Hexo 博客的根目录</li></ol><p>记得添加 type: “categories”</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-01-05 00:00:00</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="四、友链">四、友链</h3><ol><li>前往你的 Hexo 博客的根目录</li><li>输入 <code>hexo new page link</code></li><li>你会找到 source/link/index.md 这个文件</li><li>修改这个文件：</li></ol><p>记得添加 type: “link”</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">友情链接</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-06-07 22:17:49</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;link&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><p>在Hexo博客目录中的 source/_data（如果没有 _data 文件夹，请自行创建），创建一个文件 link.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">友情链接</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">那些人，那些事</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://hexo.io/zh-tw/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">快速、简单且强大的网志框架</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">网站</span></span><br><span class="line">  <span class="attr">class_desc:</span> <span class="string">值得推荐的网站</span></span><br><span class="line">  <span class="attr">link_list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Youtube</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.youtube.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">视频网站</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Weibo</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://www.weibo.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">中国最大社交分享平台</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Twitter</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://twitter.com/</span></span><br><span class="line">      <span class="attr">avatar:</span> <span class="string">https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span class="line">      <span class="attr">descr:</span> <span class="string">社交分享平台</span></span><br></pre></td></tr></table></figure><h3 id="五、图库-子页面">五、图库/子页面</h3><p>图库/子页面只是普通的页面，你只需要 <code>hexo n page xxxxx</code> 创建你的页面就行<br>然后使用标签外挂 galleryGroup，具体用法请查看对应的内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;div</span> <span class="string">class=&quot;gallery-group-main&quot;&gt;</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">galleryGroup</span> <span class="string">&#x27;壁纸&#x27;</span> <span class="string">&#x27;收藏的一些壁纸&#x27;</span> <span class="string">&#x27;/Gallery/wallpaper&#x27;</span> <span class="string">https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png</span> <span class="string">%</span>&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">galleryGroup</span> <span class="string">&#x27;漫威&#x27;</span> <span class="string">&#x27;关于漫威的图片&#x27;</span> <span class="string">&#x27;/Gallery/marvel&#x27;</span> <span class="string">https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg</span> <span class="string">%</span>&#125;</span><br><span class="line">&#123;<span class="string">%</span> <span class="string">galleryGroup</span> <span class="string">&#x27;OH MY GIRL&#x27;</span> <span class="string">&#x27;关于OH MY GIRL的图片&#x27;</span> <span class="string">&#x27;/Gallery/ohmygirl&#x27;</span> <span class="string">https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">%</span> <span class="string">gallery</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span></span><br><span class="line"><span class="type">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endgallery</span> <span class="string">%</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="六、表情包">六、表情包</h3><p>hexo不支持Markdown的表情包语法，所以需要安装其他插件</p><ol><li>安装：</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo<span class="literal">-renderer-marked</span> <span class="literal">--save</span></span><br><span class="line">npm i hexo<span class="literal">-renderer-markdown-it</span> <span class="literal">--save</span></span><br><span class="line">npm install markdown<span class="literal">-it-emoji</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure><ol start="2"><li>配置<code>_config.yml</code>文件:</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## markdown 渲染引擎配置，默认是hexo-renderer-marked，这个插件渲染速度更快，且有新特性</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">&#x27;“”‘’&#x27;</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-emoji</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">&#x27;v&#x27;</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">header-anchor</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">¶</span></span><br></pre></td></tr></table></figure><p><em>参考<a href="https://blog.xaoxu.cn/archives/hexo-use-emoji">https://blog.xaoxu.cn/archives/hexo-use-emoji</a></em></p><h3 id="七、看板娘">七、看板娘</h3><p>以live2d为例子，先下插件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">--save</span> live2d<span class="literal">-widget-model-koharu</span></span><br></pre></td></tr></table></figure><p>打开站点配置文件[BlogRoot]\config.yml<br>搜索live2d,按照如下注释内容指示进行操作。<br>如果没有搜到live2d的配置项，就直接把以下内容复制到最底部。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment">## https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#开关插件版看板娘</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span> <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://npm.elemecdn.com/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span> <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-wanko</span> <span class="comment"># npm-module package name</span></span><br><span class="line">    <span class="comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://npm.elemecdn.com/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span> <span class="comment">#控制看板娘位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span> <span class="comment">#控制看板娘大小</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span> <span class="comment">#控制看板娘大小</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span> <span class="comment"># 手机中是否展示</span></span><br></pre></td></tr></table></figure><h5 id="更换：">更换：</h5><p>同样是在Hexo根目录[BlogRoot]下，打开终端，选择想要的看板娘进行安装，例如我这里用到的是 <code>live2d-widget-model-koharu</code>，一个Q版小正太。其他的模型也可以在模型预览里查看以供选择。</p><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save live2d-widget-model-koharu</span><br></pre></td></tr></table></figure><p>然后在站点配置文件[BlogRoot]_config.yml里找到model项修改为期望的模型</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">model:</span><br><span class="line">  use: live2d<span class="literal">-widget-model-koharu</span></span><br><span class="line">  <span class="comment"># 默认为live2d-widget-model-wanko</span></span><br></pre></td></tr></table></figure><h5 id="卸载：">卸载：</h5><p>卸载插件和卸载模型的指令都是通过npm进行操作的。在博客根目录[BlogRoot]打开终端，输入：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo<span class="literal">-helper-live2d</span> <span class="comment">#卸载看板娘插件</span></span><br><span class="line">npm uninstall live2d<span class="literal">-widget-model-modelname</span> <span class="comment">#卸载看板娘模型。记得替换modelname为看板娘名称</span></span><br></pre></td></tr></table></figure><p>卸载后为了保证配置项不出错，记得把[BlogRoot]_config.yml里的配置项给注释或者删除掉</p><h1>主题配置</h1><p>直接看大佬写的教程吧<s>因为我懒</s>，注意一下有些功能要下插件就行了<br><a href="https://www.fomal.cc/posts/3451f874.html">https://www.fomal.cc/posts/3451f874.html</a> 和 <a href="https://butterfly.js.org/posts/4aa8abbe/">https://butterfly.js.org/posts/4aa8abbe/</a></p><h1>问题</h1><p>如果碰到：<code>fatal: unable to access 'https://github.com/Hamilton2718/Hamilton.github.io.git/': Failed to connect to github.com port 443 after 21075 ms: Couldn't connect to server</code>问题，可以参考这篇<a href="https://blog.csdn.net/m0_63230155/article/details/132070860">https://blog.csdn.net/m0_63230155/article/details/132070860</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>多文件编译</title>
      <link href="/2024/06/28/%E5%A4%9A%E6%96%87%E4%BB%B6%E7%BC%96%E8%AF%91/"/>
      <url>/2024/06/28/%E5%A4%9A%E6%96%87%E4%BB%B6%E7%BC%96%E8%AF%91/</url>
      
        <content type="html"><![CDATA[<h1>一.文件组成：</h1><ul><li>.h头文件，存放用到的库文件、各种函数声明、宏定义</li><li>.c源文件，存放代码，大致分为main.c和其他function.c，main.c放main函数,同时要引用头文件</li><li>Makefile文件</li></ul><h1>二. Makefile的基本语法(少用)</h1><ul><li><strong>变量定义</strong>：在Makefile中我们要定义一系列的变量，变量一般都是字符串，这个有点像C语言中的宏，当Makefile被执行时，其中的变量都会被扩展到相应的引用位置上。</li><li><strong>显式规则</strong>：显式规则说明了如何生成一个或多的的目标文件。这是由Makefile的书写者明显指出，要生成的文件，文件的依赖文件，生成的命令。 刚才写的全部都是显示规则。</li><li><strong>隐晦规则</strong>：由于我们的make有自动推导的功能，所以隐晦的规则可以让我们比较粗糙地简略地书写Makefile，这是由make所支持的。</li><li><strong>文件指示</strong>：其包括了三个部分: 一个是在一个Makefile中引用另一个Makefile, 就像C语言中的include一样; 另一个是指根据某些情况指定Makefile中的有效部分, 就像C语言中的预编译#if一样; 还有就是定义一个多行的命令.</li><li><strong>注释</strong>：与python相同，#后面的均是注释内容</li><li><strong>一些预定义变量的介绍</strong>：<ul><li>$* 　　不包含扩展名的目标文件名称。</li><li>$+ 　　所有的依赖文件，以空格分开，并以出现的先后为序，可能包含重复的依赖文件。</li><li>$&lt; 　　第一个依赖文件的名称。</li><li>$? 　　所有的依赖文件，以空格分开，这些依赖文件的修改日期比目标的创建日期晚。</li><li>$@ 　  目标的完整名称。</li><li>$^ 　　所有的依赖文件，以空格分开，不包含重复的依赖文件。</li><li>$%     如果目标是归档成员，则该变量表示目标的归档成员名称</li></ul></li><li><strong>参考代码</strong>：</li></ul><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">CXX = gcc     <span class="comment">#确定编译器是gcc，先把它写在一个变量里，后面如果想要改编译器的话直接改CXX这个变量的value就可以</span></span><br><span class="line">TARGET = main <span class="comment">#确定最后生成可执行文件的名称，也是方便后续更改所以放在一个变量里</span></span><br><span class="line">SRC = <span class="variable">$(<span class="built_in">wildcard</span> *.c)</span> <span class="comment">#开始抽象了，这里wildcard是通配符，表示“*”这个符号具有通配符的功能，*.c可以表示当前目录下的所有.c文件，$()表示括号内的内容是SRC所表示的部分</span></span><br><span class="line">OBJ = <span class="variable">$(<span class="built_in">patsubst</span> %.c, %.o, <span class="variable">$(SRC)</span>)</span> <span class="comment">#更抽象了，这里patsubst是一个把SRC中所有的.c文件替换成.o文件的函数</span></span><br><span class="line"></span><br><span class="line">CXXFLAGS = -c -Wall <span class="comment">#这句话的意思是用CXXFLAGS这个变量去替换-c -Wall这两个命令，-c是编译compile，-Wall是显示所有的warning（例如变量未使用之类的）</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(TARGET)</span>: <span class="variable">$(OBJ)</span>   <span class="comment">#这两行的意思是，TARGET是依赖于OBJ的，也就是最后的.exe文件依赖于所有的.o文件，下面的$@表示目标文件，$^表示所有的依赖文件，%&lt;表示第一个依赖文件，这两行翻译过来就是：gcc main.c print.c print1.c -c，也就是把所有的.c文件全都编译</span></span><br><span class="line">    <span class="variable">$(CXX)</span> -o <span class="variable">$@</span> <span class="variable">$^</span></span><br><span class="line"><span class="comment">#这两行翻译过来就是：gcc -c -Wall main.o print.o print1.o -o main</span></span><br><span class="line"><span class="section">%.o: %.c         </span></span><br><span class="line">    <span class="variable">$(CXX)</span> <span class="variable">$(CXXFLAGS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"><span class="comment">#.PHONY表示后面那个目标（这里就是clean）是个伪文件目标，也就是说它没有依赖文件，是一个只执行的命令，不会出现对应的clean文件</span></span><br><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: clean </span></span><br><span class="line"><span class="comment">#说明clean这个命令具体要干什么事情，下面那一行表示把TARGET下所有的.o文件都删除，方便下一次更改文件后重新编译</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">    rm -f *.o <span class="variable">$(TARGET)</span></span><br></pre></td></tr></table></figure><h1>三.Cmake（用的多）</h1><p><strong>1. 创建项目，项目结构一般包含：</strong></p><ul><li>.vscode</li><li>bin文件夹  存放二进制文件</li><li>build文件夹  存放编译过程中产生的中间文件</li><li>doc文件夹  存放相关文档</li><li>inc文件夹  存放头文件(.h文件)</li><li>lib文件夹  存放库文件</li><li>src文件夹  存放源代码文件(.c文件)</li><li>CMakeLists.txt  Cmake配置文件</li></ul><p><strong>2.创建CMakelists.txt，内容可以参考如下：</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)<span class="comment">#最小版本要求</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">project</span> (main)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> (EXECUTABLE_OUTPUT_PATH <span class="variable">$&#123;PROJECT_SOURCE_DIR&#125;</span>/bin)</span><br><span class="line"></span><br><span class="line"><span class="keyword">aux_source_directory</span> (src SRC_LIST)</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span> (inc)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span> (main <span class="variable">$&#123;SRC_LIST&#125;</span>)</span><br></pre></td></tr></table></figure><p><strong>3. 在cmake插件的状态栏里点击“生成”，然后”在终端中运行</strong><br><strong>4.上传github仓库：</strong></p><h2 id="法一：git上传">法一：git上传</h2><p>先在指定文件夹中git bash here：</p><ol><li>将远程仓库的文件拷贝到本地使用命令：<br>git clone 链接</li><li>上传文件到仓库：<br>git add .<br>git commit -m ‘注释’<br>git push -u origin main</li></ol><h2 id="法二：gitlens插件">法二：gitlens插件</h2><ol><li>打开状态栏的gitlens插件，加号将更改暂存</li><li>点提交后同步即可<br>gitlens使上传速率大大提高，并图形化了过程</li></ol><h2 id="法三：githubdesktop">法三：githubdesktop</h2><p>直接在githubdesktop里打开对应的仓库的文件夹。文件有变动之后add、commit、push即可</p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[<h1>hello</h1>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[<p>#hh</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>大佬友链聚集地</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
